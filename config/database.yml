# Database configuration for IMI-Maps
# The default is to use SQLite; if the Postgres configuration should be
# used set the environment variable IMIMAPS_ENVIRONMENT to docker. This is done
# in Dockerfile for the docker deployments.
# export set IMIMAPS_ENVIRONMENT=docker

<%
if ENV['IMIMAPS_ENVIRONMENT'] == "docker"
  @username = ENV['POSTGRES_USER']
  @password = ENV['POSTGRES_PASSWORD']
  @database = ENV['POSTGRES_DB']
  @hostname = 'postgresql'
 else
  @username = 'imi_map'
  @password = 'imimap'
  @database = 'imimap'
  @hostname = 'localhost'
end %>

development:
  adapter: postgresql
  encoding: unicode
  pool: 5
  timeout: 5000
  host: <%= @hostname %>
  username: <%= @username %>
  password: <%= @password %>
  database: <%= @database %>

test:
  adapter: postgresql
  encoding: unicode
  pool: 5
  timeout: 5000
  host: <%= @hostname %>
  username: <%= @username %>
  password: <%= @password %>
  database: <%= @database %>-test

production:
  adapter: postgresql
  encoding: unicode
  pool: 5
  timeout: 5000
  host: <%= @hostname %>
  username: <%= @username %>
  password: <%= @password %>
  database: <%= @database %>
